@model ProductListViewModel

@{
    var Page = Model.PageInfo;
}

<div class="row mt-3">
    <div class="col-md-3">
        @await Component.InvokeAsync("Categories")
    </div>
    <div class="col-md-9">
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-md-4">
                    @await Html.PartialAsync("_product", product)
                </div>
            }
        </div>

        <div class="row">
            <nav aria-label="Page navigation example">
                <ul class="pagination">

                    <li class="page-item">
                        @if(String.IsNullOrEmpty(Page.CurrentCategory)) {
                            <a class="page-link" href="/products?page=@(Page.CurrentPage > 1?(Page.CurrentPage - 1):Page.CurrentPage)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        } else {
                            <a class="page-link" href="/products/@(Page.CurrentCategory)?page=@(Page.CurrentPage > 1?(Page.CurrentPage - 1):Page.CurrentPage)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        }
                    </li>

                    @for (int i = 1; i <= Page.TotalPages(); i++)
                    {
                        @if(String.IsNullOrEmpty(Page.CurrentCategory)) {
                            <li class="page-item @(Page.CurrentPage == i ? "active":"")">
                                <a class="page-link" href="/products?page=@i">@i
                                </a>
                            </li>
                        } else {
                            <li class="page-item @(Page.CurrentPage == i ? "active":"")">
                                <a class="page-link" href="/products/@Page.CurrentCategory?page=@i">@i
                                </a>
                            </li>
                        }
                    }
                    <li class="page-item">
                        @if(String.IsNullOrEmpty(Page.CurrentCategory)) {
                            <a class="page-link" href="/products?page=@(Page.CurrentPage < Page.TotalPages() ?(Page.CurrentPage + 1):Page.CurrentPage)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        } else {
                            <a class="page-link" href="/products/@(Page.CurrentCategory)?page=@(Page.CurrentPage < Page.TotalPages() ?(Page.CurrentPage + 1):Page.CurrentPage)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        }
                    </li>
                </ul>
            </nav>
        </div>

    </div>
</div>

@section Scripts{
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
}